import{_ as s,c as i,o as a,a2 as e}from"./chunks/framework.Sicmpk4x.js";const u=JSON.parse('{"title":"LarkUtils","description":"","frontmatter":{},"headers":[],"relativePath":"plugins/utils.md","filePath":"plugins/utils.md"}'),t={name:"plugins/utils.md"},n=e(`<h1 id="larkutils" tabindex="-1">LarkUtils <a class="header-anchor" href="#larkutils" aria-label="Permalink to &quot;LarkUtils&quot;">​</a></h1><blockquote><p>Import 位置: <code>src.plugins.nonebot_plugin_larkutils</code></p></blockquote><h2 id="依赖注入" tabindex="-1">依赖注入 <a class="header-anchor" href="#依赖注入" aria-label="Permalink to &quot;依赖注入&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>下列方法都使用了 NoneBot2 依赖注入功能，需要写在事件 Handler 的参数默认值中。</p><p>例如：</p><p><strong>获得 UserID</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@matcher.handle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> _</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(user_id: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> get_user_id()) -&gt; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">None</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    ...</span></span></code></pre></div><p><strong>是否为 SuperUser 用户触发</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@matcher.handle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> _</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(superuser: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> is_user_superuser()) -&gt; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">None</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    ...</span></span></code></pre></div></div><h3 id="def-get-group-id-str" tabindex="-1"><code>def get_group_id() -&gt; str</code> <a class="header-anchor" href="#def-get-group-id-str" aria-label="Permalink to &quot;\`def get_group_id() -&gt; str\`&quot;">​</a></h3><p>获取触发事件的群号。</p><h3 id="def-is-user-superuser-bool" tabindex="-1"><code>def is_user_superuser() -&gt; bool</code> <a class="header-anchor" href="#def-is-user-superuser-bool" aria-label="Permalink to &quot;\`def is_user_superuser() -&gt; bool\`&quot;">​</a></h3><p>触发事件的用户是否为 SuperUser。</p><h3 id="def-get-user-id-str" tabindex="-1"><code>def get_user_id() -&gt; str</code> <a class="header-anchor" href="#def-get-user-id-str" aria-label="Permalink to &quot;\`def get_user_id() -&gt; str\`&quot;">​</a></h3><p>获取触发事件的用户 ID。</p><h2 id="内容审核" tabindex="-1">内容审核 <a class="header-anchor" href="#内容审核" aria-label="Permalink to &quot;内容审核&quot;">​</a></h2><h3 id="类型定义" tabindex="-1">类型定义 <a class="header-anchor" href="#类型定义" aria-label="Permalink to &quot;类型定义&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> typing </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TypedDict, Literal, Optional</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ReviewResult</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TypedDict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 也就是一个字典</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # API 返回审核结果</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    conclusion: Literal[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;合规&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;疑似&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;不合规&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;出错&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 审核失败原因</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    message: Optional[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 审核是否通过</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    compliance: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bool</span></span></code></pre></div><h3 id="函数" tabindex="-1">函数 <a class="header-anchor" href="#函数" aria-label="Permalink to &quot;函数&quot;">​</a></h3><h4 id="async-def-review-image-image-bytes-reviewresult" tabindex="-1"><code>async def review_image(image: bytes) -&gt; ReviewResult</code> <a class="header-anchor" href="#async-def-review-image-image-bytes-reviewresult" aria-label="Permalink to &quot;\`async def review_image(image: bytes) -&gt; ReviewResult\`&quot;">​</a></h4><p>审核图片。</p><h5 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h5><ul><li><code>image</code> (bytes): 图片二进制数据。</li></ul><h5 id="返回" tabindex="-1">返回 <a class="header-anchor" href="#返回" aria-label="Permalink to &quot;返回&quot;">​</a></h5><p>审核结果。</p><h4 id="async-def-review-text-text-str-reviewresult" tabindex="-1"><code>async def review_text(text: str) -&gt; ReviewResult</code> <a class="header-anchor" href="#async-def-review-text-text-str-reviewresult" aria-label="Permalink to &quot;\`async def review_text(text: str) -&gt; ReviewResult\`&quot;">​</a></h4><p>审核文本。</p><h5 id="参数-1" tabindex="-1">参数 <a class="header-anchor" href="#参数-1" aria-label="Permalink to &quot;参数&quot;">​</a></h5><ul><li><code>text</code> (str): 文本内容。</li></ul><h5 id="返回-1" tabindex="-1">返回 <a class="header-anchor" href="#返回-1" aria-label="Permalink to &quot;返回&quot;">​</a></h5><p>审核结果。</p><h2 id="其他" tabindex="-1">其他 <a class="header-anchor" href="#其他" aria-label="Permalink to &quot;其他&quot;">​</a></h2><h3 id="async-def-get-id-session-async-scoped-session-col-columnexpressionargument-int-int" tabindex="-1"><code>async def get_id(session: async_scoped_session, col: ColumnExpressionArgument[int]) -&gt; int</code> <a class="header-anchor" href="#async-def-get-id-session-async-scoped-session-col-columnexpressionargument-int-int" aria-label="Permalink to &quot;\`async def get_id(session: async_scoped_session, col: ColumnExpressionArgument[int]) -&gt; int\`&quot;">​</a></h3><div class="danger custom-block"><p class="custom-block-title">DANGER</p><p>未经充分测试，不建议使用。</p></div><p>获取 SQL 表新项目 ID</p><h3 id="def-get-galactic-time-earth-time-float-list-int" tabindex="-1"><code>def get_galactic_time(earth_time: float) -&gt; list[int]</code> <a class="header-anchor" href="#def-get-galactic-time-earth-time-float-list-int" aria-label="Permalink to &quot;\`def get_galactic_time(earth_time: float) -&gt; list[int]\`&quot;">​</a></h3><p>获取 GSC 时间。</p><h4 id="参数-2" tabindex="-1">参数 <a class="header-anchor" href="#参数-2" aria-label="Permalink to &quot;参数&quot;">​</a></h4><ul><li><code>earth_time</code> (float): 地球时间（Unix 时间戳）</li></ul><h4 id="返回-2" tabindex="-1">返回 <a class="header-anchor" href="#返回-2" aria-label="Permalink to &quot;返回&quot;">​</a></h4><p>包含 6 个项目的列表，分别为：</p><ol><li>标准年</li><li>环月</li><li>量日</li><li>系统时</li><li>分钟</li><li>秒</li></ol>`,37),l=[n];function h(r,p,o,d,k,c){return a(),i("div",null,l)}const E=s(t,[["render",h]]);export{u as __pageData,E as default};
