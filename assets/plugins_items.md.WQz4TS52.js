import{_ as i,c as a,o as e,ae as t}from"./chunks/framework.BHrE6nLq.js";const c=JSON.parse('{"title":"Items","description":"","frontmatter":{},"headers":[],"relativePath":"plugins/items.md","filePath":"plugins/items.md"}'),l={name:"plugins/items.md"};function h(n,s,p,o,k,r){return e(),a("div",null,s[0]||(s[0]=[t('<h1 id="items" tabindex="-1">Items <a class="header-anchor" href="#items" aria-label="Permalink to &quot;Items&quot;">​</a></h1><p><code>nonebot_plugin_items</code> 提供了 Moonlark 中的物品基类，和物品注册支持。</p><p>不建议在这个插件以外的位置注册物品。</p><h2 id="物品基类-item" tabindex="-1">物品基类 <code>Item</code> <a class="header-anchor" href="#物品基类-item" aria-label="Permalink to &quot;物品基类 `Item`&quot;">​</a></h2><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ABC</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span></code></pre></div><p>物品基类，所有物品都应继承此类。</p><h3 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h3><ul><li><code>properties</code>: 物品特性</li><li><code>lang</code>: 本地化助手</li></ul><h3 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-label="Permalink to &quot;方法&quot;">​</a></h3><ul><li><code>__init__(self, properties: ItemProperties = get_properties())</code>: 初始化物品</li><li><code>getProperties(self) -&gt; ItemProperties</code>: 获取物品特性</li><li><code>setupLang(self) -&gt; None</code>: 抽象方法，设置本地化助手</li><li><code>getLocation(self)</code>: 获取物品位置</li><li><code>getName(self, stack: &quot;ItemStack&quot;) -&gt; str</code>: 获取物品名称</li><li><code>getDefaultName(self, stack: &quot;ItemStack&quot;) -&gt; str</code>: 获取物品默认名称</li><li><code>getText(self, key: str, user_id: str, *args, **kwargs) -&gt; str</code>: 获取本地化文本</li><li><code>isUseable(self, stack: &quot;ItemStack&quot;) -&gt; bool</code>: 检查物品是否可使用</li><li><code>getDefaultDescription(self, user_id: str) -&gt; str</code>: 获取物品默认描述</li><li><code>getDescription(self, stack: &quot;ItemStack&quot;) -&gt; str</code>: 获取物品描述</li></ul><h2 id="带使用操作的物品的基类-useableitem" tabindex="-1">带使用操作的物品的基类 <code>UseableItem</code> <a class="header-anchor" href="#带使用操作的物品的基类-useableitem" aria-label="Permalink to &quot;带使用操作的物品的基类 `UseableItem`&quot;">​</a></h2><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> UseableItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ABC</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span></code></pre></div><p>可使用物品的基类，继承自 <code>Item</code>。</p><h3 id="方法-1" tabindex="-1">方法 <a class="header-anchor" href="#方法-1" aria-label="Permalink to &quot;方法&quot;">​</a></h3><ul><li><code>__init__(self, properties: ItemProperties = get_properties()) -&gt; None</code>: 初始化可使用物品</li><li><code>useItem(self, stack: &quot;ItemStack&quot;, *args, **kwargs) -&gt; Any</code>: 抽象方法，使用物品</li></ul><h2 id="物品特性-itemproperties" tabindex="-1">物品特性 <code>ItemProperties</code> <a class="header-anchor" href="#物品特性-itemproperties" aria-label="Permalink to &quot;物品特性 `ItemProperties`&quot;">​</a></h2><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ItemProperties</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TypedDict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    useable: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bool</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    star: Literal[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    max_stack: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">int</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    multi_use: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bool</span></span></code></pre></div><p>物品特性类型定义。</p><h3 id="字段" tabindex="-1">字段 <a class="header-anchor" href="#字段" aria-label="Permalink to &quot;字段&quot;">​</a></h3><ul><li><code>useable</code>: 是否可使用</li><li><code>star</code>: 物品星级（1-5）</li><li><code>max_stack</code>: 最大堆叠数</li><li><code>multi_use</code>: 是否可多次使用</li></ul><h2 id="创建物品特性-get-properties" tabindex="-1">创建物品特性 <code>get_properties</code> <a class="header-anchor" href="#创建物品特性-get-properties" aria-label="Permalink to &quot;创建物品特性 `get_properties`&quot;">​</a></h2><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_properties</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    useable: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> False</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    star: Literal[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    max_stack: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    multi_use: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> False</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) -&gt; ItemProperties:</span></span></code></pre></div><p>创建物品特性对象。</p><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><ul><li><code>useable</code>: 是否可使用，默认为 <code>False</code></li><li><code>star</code>: 物品星级（1-5），默认为 <code>2</code></li><li><code>max_stack</code>: 最大堆叠数，默认为 <code>64</code></li><li><code>multi_use</code>: 是否可多次使用，默认为 <code>False</code></li></ul><h3 id="返回" tabindex="-1">返回 <a class="header-anchor" href="#返回" aria-label="Permalink to &quot;返回&quot;">​</a></h3><p><code>ItemProperties</code> - 物品特性对象</p><h2 id="物品注册池-registry" tabindex="-1">物品注册池 <code>registry</code> <a class="header-anchor" href="#物品注册池-registry" aria-label="Permalink to &quot;物品注册池 `registry`&quot;">​</a></h2><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Registry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">typing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.Generic[T1]):</span></span></code></pre></div><p>物品注册池，用于注册和管理物品。</p><h3 id="方法-2" tabindex="-1">方法 <a class="header-anchor" href="#方法-2" aria-label="Permalink to &quot;方法&quot;">​</a></h3><ul><li><code>registry(self, location: ResourceLocation, value: T1) -&gt; tuple[ResourceLocation, T1]</code>: 注册物品</li><li><code>getValue(self, location: ResourceLocation) -&gt; T1</code>: 根据位置获取物品</li><li><code>getKey(self, value: T1) -&gt; ResourceLocation</code>: 根据物品获取位置</li><li><code>getEntries(self) -&gt; list[tuple[ResourceLocation, T1]]</code>: 获取所有注册项</li></ul>',32)]))}const g=i(l,[["render",h]]);export{c as __pageData,g as default};
